INFO:    gocryptfs not found, will not be able to use gocryptfs
I0623 16:56:25.653001 22608668206208 xla_bridge.py:895] Unable to initialize backend 'rocm': module 'jaxlib.xla_extension' has no attribute 'GpuAllocatorConfig'
I0623 16:56:25.676557 22608668206208 xla_bridge.py:895] Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory

Running AlphaFold 3. Please note that standard AlphaFold 3 model parameters are
only available under terms of use provided at
https://github.com/google-deepmind/alphafold3/blob/main/WEIGHTS_TERMS_OF_USE.md.
If you do not agree to these terms and are using AlphaFold 3 derived model
parameters, cancel execution of AlphaFold 3 inference with CTRL-C, and do not
use the model parameters.

Found local devices: [CudaDevice(id=0)], using device 0: cuda:0
Building model from scratch...
Checking that model parameters can be loaded...

Running fold job csf1r...
Output will be written in /root/af_output/csf1r_20250623_165630 since /root/af_output/csf1r is non-empty.
Skipping data pipeline...
Writing model input JSON to /root/af_output/csf1r_20250623_165630/csf1r_data.json
Predicting 3D structure for csf1r with 10 seed(s)...
Featurising data with 10 seed(s)...
Featurising data with seed 1.
I0623 16:56:38.099592 22608668206208 pipeline.py:166] processing csf1r, random_seed=1
I0623 16:56:38.136032 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:56:38.136208 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:56:41.135153 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:56:42.745732 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 1 took 4.73 seconds.
Featurising data with seed 2.
I0623 16:56:42.832658 22608668206208 pipeline.py:166] processing csf1r, random_seed=2
I0623 16:56:42.850435 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:56:42.850516 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:56:45.778974 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:56:47.409456 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 2 took 4.65 seconds.
Featurising data with seed 3.
I0623 16:56:47.486045 22608668206208 pipeline.py:166] processing csf1r, random_seed=3
I0623 16:56:47.504411 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:56:47.504492 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:56:50.429592 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:56:52.114214 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 3 took 4.71 seconds.
Featurising data with seed 4.
I0623 16:56:52.196223 22608668206208 pipeline.py:166] processing csf1r, random_seed=4
I0623 16:56:52.215329 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:56:52.215434 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:56:55.078522 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:56:56.676657 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 4 took 4.56 seconds.
Featurising data with seed 5.
I0623 16:56:56.752091 22608668206208 pipeline.py:166] processing csf1r, random_seed=5
I0623 16:56:56.770257 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:56:56.770342 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:56:59.739480 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:57:01.394482 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 5 took 4.73 seconds.
Featurising data with seed 6.
I0623 16:57:01.482051 22608668206208 pipeline.py:166] processing csf1r, random_seed=6
I0623 16:57:01.500833 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:57:01.500926 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:57:04.406497 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:57:06.029203 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 6 took 4.63 seconds.
Featurising data with seed 7.
I0623 16:57:06.107240 22608668206208 pipeline.py:166] processing csf1r, random_seed=7
I0623 16:57:06.125472 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:57:06.125550 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:57:09.160000 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:57:10.767918 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 7 took 4.74 seconds.
Featurising data with seed 8.
I0623 16:57:10.844266 22608668206208 pipeline.py:166] processing csf1r, random_seed=8
I0623 16:57:10.862771 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:57:10.862847 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:57:13.758079 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:57:15.382423 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 8 took 4.62 seconds.
Featurising data with seed 9.
I0623 16:57:15.465162 22608668206208 pipeline.py:166] processing csf1r, random_seed=9
I0623 16:57:15.485495 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:57:15.485638 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:57:18.393330 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:57:19.989358 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 9 took 4.60 seconds.
Featurising data with seed 10.
I0623 16:57:20.067532 22608668206208 pipeline.py:166] processing csf1r, random_seed=10
I0623 16:57:20.085620 22608668206208 pipeline.py:259] Calculating bucket size for input with 291 tokens.
I0623 16:57:20.085698 22608668206208 pipeline.py:265] Got bucket size 512 for input with 291 tokens, resulting in 221 padded tokens.
I0623 16:57:22.988713 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
I0623 16:57:24.678689 22608668206208 features.py:1520] Using SMILES for: LIG_B - N#Cc1c[nH]c(C(=O)Nc2ccc(C3=CC[NH2+]CC3)cc2C2=CCCCC2)n1
Featurising data with seed 10 took 4.69 seconds.
Featurising data with 10 seed(s) took 54.21 seconds.
Running model inference and extracting output structure samples with 10 seed(s)...
Running model inference with seed 1...
Running model inference with seed 1 took 123.05 seconds.
Extracting inference results with seed 1...
Extracting 5 inference samples with seed 1 took 0.30 seconds.
Running model inference with seed 2...
Running model inference with seed 2 took 93.09 seconds.
Extracting inference results with seed 2...
Extracting 5 inference samples with seed 2 took 0.29 seconds.
Running model inference with seed 3...
Running model inference with seed 3 took 93.03 seconds.
Extracting inference results with seed 3...
Extracting 5 inference samples with seed 3 took 0.27 seconds.
Running model inference with seed 4...
Running model inference with seed 4 took 92.99 seconds.
Extracting inference results with seed 4...
Extracting 5 inference samples with seed 4 took 0.27 seconds.
Running model inference with seed 5...
Running model inference with seed 5 took 93.01 seconds.
Extracting inference results with seed 5...
Extracting 5 inference samples with seed 5 took 0.45 seconds.
Running model inference with seed 6...
Running model inference with seed 6 took 93.03 seconds.
Extracting inference results with seed 6...
Extracting 5 inference samples with seed 6 took 0.27 seconds.
Running model inference with seed 7...
Running model inference with seed 7 took 92.91 seconds.
Extracting inference results with seed 7...
Extracting 5 inference samples with seed 7 took 0.27 seconds.
Running model inference with seed 8...
Running model inference with seed 8 took 92.73 seconds.
Extracting inference results with seed 8...
Extracting 5 inference samples with seed 8 took 0.27 seconds.
Running model inference with seed 9...
Running model inference with seed 9 took 92.86 seconds.
Extracting inference results with seed 9...
Extracting 5 inference samples with seed 9 took 0.27 seconds.
Running model inference with seed 10...
Running model inference with seed 10 took 92.86 seconds.
Extracting inference results with seed 10...
Extracting 5 inference samples with seed 10 took 0.27 seconds.
Running model inference and extracting output structures with 10 seed(s) took 962.49 seconds.
Writing outputs with 10 seed(s)...
Fold job csf1r done, output written to /root/af_output/csf1r_20250623_165630

Done running 1 fold jobs.

------------------------------------------------------------
Sender: LSF System <lsfadmin@c4140c05>
Subject: Job 456135: <bash /pi/summer.thyme-umw/2024_intern_lab_space/thyme_lab_internship_2024/scripts/alphafold3/../../alphafold3/csf1r/csf1r_docking.sh> in cluster <sci> Done

Job <bash /pi/summer.thyme-umw/2024_intern_lab_space/thyme_lab_internship_2024/scripts/alphafold3/../../alphafold3/csf1r/csf1r_docking.sh> was submitted from host <r640c58> by user <ari.ginsparg-umw> in cluster <sci> at Mon Jun 23 16:38:31 2025
Job was executed on host(s) <8*c4140c05>, in queue <gpu>, as user <ari.ginsparg-umw> in cluster <sci> at Mon Jun 23 16:56:19 2025
</home/ari.ginsparg-umw> was used as the home directory.
</pi/summer.thyme-umw/2024_intern_lab_space/thyme_lab_internship_2024/scripts/alphafold3> was used as the working directory.
Started at Mon Jun 23 16:56:19 2025
Terminated at Mon Jun 23 17:13:38 2025
Results reported at Mon Jun 23 17:13:38 2025

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
bash /pi/summer.thyme-umw/2024_intern_lab_space/thyme_lab_internship_2024/scripts/alphafold3/../../alphafold3/csf1r/csf1r_docking.sh
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   1023.00 sec.
    Max Memory :                                 5087 MB
    Average Memory :                             4900.66 MB
    Total Requested Memory :                     16384.00 MB
    Delta Memory :                               11297.00 MB
    Max Swap :                                   -
    Max Processes :                              6
    Max Threads :                                262
    Run time :                                   1034 sec.
    Turnaround time :                            2107 sec.

The output (if any) is above this job summary.

